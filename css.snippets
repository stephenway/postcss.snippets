priority -50

# PostCSS
# -------

#
# Plugin Control
#

snippet context "Context" b
@context ${1:plugin} {
  $0
}
endsnippet

snippet use "Use" b
@use ${1:plugin}(${2:options});$0
endsnippet

#
# Future Syntax
#

snippet color "color( <hue> <adjuster> )" b
color(${1:color/hue} ${2:alpha/hue/saturation/lightness/whiteness/blackness/tint/shade/blend/contrast})$0
endsnippet

snippet gray "gray()"
gray(${1:255}, ${2:50%})$0
endsnippet

snippet hwb "hwb()"
hwb(${1:90}, ${2:0%}, ${3:0%}, ${4:.5})$0
endsnippet

snippet cg "background-image: conic-gradient(<colors>);" b
background-image: conic-gradient(${1});
endsnippet

snippet cm "Custom Media" b
@custom-media --${1:mobile} (${2:width <= 640px});$0
endsnippet

snippet -- "Custom Property" b
--${1:name}: ${2};$0
endsnippet

snippet var "var(--custom-property)" b
var(--${1:name});$0
endsnippet

snippet :r ":root" b
:root
endsnippet

snippet cs "Custom Selector" b
@custom-selector :--${1:heading} ${2:h1, h2, h3, h4, h5, h6};$0
endsnippet

snippet sel "Selector" b
:--${1:heading}$0
endsnippet

snippet ph "@define-placeholder" b
@define-placeholder ${1} {
  $0
}
endsnippet

snippet e "@extend" b
@extend ${1};$0
endsnippet

snippet :h ":host" b
:host
endsnippet

snippet mm "Media Minmax" b
@media screen and (${1:500px}) <= width <= ${2:1200px}) {
  $0
}
endsnippet

snippet :al ":any-link" b
:any-link
endsnippet

snippet :n ":not()" b
:not($0)
endsnippet

snippet :m ":matches()" b
:matches(${1:.foo}) {
  $0
}
endsnippet

snippet ap "@apply --property-map" b
@apply --${1};$0
endsnippet

#
# Optimizations
#

snippet calc "calc()" b
calc(${1})$0
endsnippet

snippet ref "@references" b
@references ${1};$0
endsnippet

snippet charset "@charset" b
@charset ${1:"Shift_JIS"};
endsnippet

#
# Shortcuts
#

# Easings
snippet easing "easeIn/Out/InOut" b
ease${1:In/Out/InOut}${2:Sine/Quad/Cubic/Quart/Quint/Expo/Circ/Back/Elastic/Bounce}$0
endsnippet

snippet :h ":hover, :focus" b
&:hover,
&:focus {
  $0
}
endsnippet

snippet size "size" b
size: ${1:10px};$0
endsnippet

snippet size "width and height" b
height: ${1:10px};
width: ${1};$0
endsnippet

#
# Analysis
#

# BEM Linter
snippet def "@define" b
/** @define ${1:MyComponent */}
$0
endsnippet

snippet defv "@define verbose" b
/** postcss-bem-linter: define ${1:FancyComponent */}
$0
endsnippet

snippet defw "@define weak" b
/** @define ${1:MyComponent; weak */}
$0
endsnippet

snippet defutil "@define uitilities" b
/** @define utilities */
$0
endsnippet

snippet defend "@end" b
/* @end */$0
endsnippet

snippet ignore "ignore" b
/* postcss-bem-linter: ignore */
$0
endsnippet

